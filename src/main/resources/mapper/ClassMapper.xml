<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
  例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)-->
   <mapper namespace="mapper.ClassMapper">
    <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复
   使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
   resultType="me.gacl.domain.User"就表示将查询结果封装成一个User类的对象返回
   User类就是users表所对应的实体类
   -->
      <!--
         根据id查询得到一个order对象，使用这个查询是查询不到我们想要的结果的，
         这主要是因为实体类的属性名和数据库的字段名对应不上的原因，因此无法查询出对应的记录
      -->
        <!--通过<resultMap>映射实体类属性名和表的字段名对应关系 -->


    <select id="getClass" parameterType="int" resultMap="ClassResultMap">
        select * from class c, teacher t where c.teacher_id=t.t_id and c.c_id=#{id}
    </select>

        <resultMap type="com.test.model.Classes" id="ClassResultMap">
            <!-- 用id属性来映射主键字段 -->
            <id property="id" column="order_id"/>
            <!-- 用result属性来映射非主键字段 -->
            <result property="name" column="name"/>
            <association property="teacher" javaType="com.test.model.Teacher">
                <id property="id" column="t_id"/>
                <result property="name" column="t_name"/>
            </association>
        </resultMap>





  </mapper>